<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 自定义适配器整合jedisPool和shardedPool,redis集群配置-->
	<context:annotation-config />
	<context:component-scan base-package="com.wolf.*"/>

	<!-- 将多个配置文件读取到容器中，交给Spring管理 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean>

	<!-- 定义jedis连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="numTestsPerEvictionRun" value="${numTestsPerEvictionRun}"/>
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
		<property name="softMinEvictableIdleTimeMillis" value="${softMinEvictableIdleTimeMillis}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<property name="testWhileIdle" value="${testWhileIdle}"/>
		<property name="testOnReturn" value="${testOnReturn}"/>
		<property name="jmxEnabled" value="${jmxEnabled}"/>
		<property name="jmxNamePrefix" value="${jmxNamePrefix}"/>
		<property name="blockWhenExhausted" value="${blockWhenExhausted}"/>
	</bean>

	<!-- redis 集群配置 begin ====================== -->

	<bean id="jedis.shardInfo1" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${redis.host1}" />
		<constructor-arg index="1" value="${redis.port}" />
		<constructor-arg index="2" value="${cache.timeout}" />
		<constructor-arg index="3" value="${note.name1}" />
	</bean>

	<!--<bean id="jedis.shardInfo2" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${redis.host2}" />
		<constructor-arg index="1" value="${redis.port}" />
		<constructor-arg index="2" value="${cache.timeout}" />
		<constructor-arg index="3" value="${note.name2}" />
	</bean>

	<bean id="jedis.shardInfo3" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${redis.host3}" />
		<constructor-arg index="1" value="${redis.port}" />
		<constructor-arg index="2" value="${cache.timeout}" />
		<constructor-arg index="3" value="${note.name3}" />
	</bean>-->

	<bean id="shardedJedisPool" class="com.wolf.redis.common.jedisadaptor.JedisPoolAdaptor">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<ref bean="jedis.shardInfo1" />
				<!--<ref bean="jedis.shardInfo2" />
				<ref bean="jedis.shardInfo3" />-->
			</list>
		</constructor-arg>
	</bean>
	<!-- redis 配置 end ====================== -->

</beans>